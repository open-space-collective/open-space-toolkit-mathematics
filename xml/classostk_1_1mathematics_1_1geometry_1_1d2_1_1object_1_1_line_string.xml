<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kind="class" language="C++" prot="public">
    <compoundname>ostk::mathematics::geometry::d2::object::LineString</compoundname>
    <basecompoundref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" prot="public" virt="non-virtual">ostk::mathematics::geometry::d2::Object</basecompoundref>
    <includes refid="2_d_2_object_2_line_string_8hpp" local="no">LineString.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1acacd5fbb50b8d1b38b2d90b9139cbfa9" prot="public" static="no">
        <type>Array&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &gt;::<ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1acacd5fbb50b8d1b38b2d90b9139cbfa9" kindref="member">ConstIterator</ref></type>
        <definition>typedef Array&lt;Point&gt;::ConstIterator ostk::mathematics::geometry::d2::object::LineString::ConstIterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="43" column="35" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" bodystart="43" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a684ec38d99af1a390759978aabe670cd" prot="private" static="no" mutable="no">
        <type>Array&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &gt;</type>
        <definition>Array&lt;Point&gt; ostk::mathematics::geometry::d2::object::LineString::points_</definition>
        <argsstring></argsstring>
        <name>points_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="200" column="11" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" bodystart="200" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1af664c958b514884a3889eab433c5482d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d2::object::LineString::LineString</definition>
        <argsstring>(const Array&lt; Point &gt; &amp;aPointArray)</argsstring>
        <name>LineString</name>
        <param>
          <type>const Array&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &gt; &amp;</type>
          <declname>aPointArray</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString<sp/>lineString({<sp/>{<sp/>0.0,<sp/>0.0<sp/>},<sp/>{<sp/>0.0,<sp/>1.0<sp/>},<sp/>{<sp/>1.0,<sp/>0.0<sp/>}<sp/>})<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPointArray</parametername>
</parameternamelist>
<parameterdescription>
<para>A point array </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="53" column="5" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="21" bodyend="25"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a37f35461ca951c8a01b50631500cddd8" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref> *</type>
        <definition>LineString * ostk::mathematics::geometry::d2::object::LineString::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1af63da855554f9114803103fe2390f5eb">clone</reimplements>
        <briefdescription>
<para>Clone line string. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to cloned line string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="59" column="24" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="27" bodyend="30"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a9a5ce9c1b26bbad9f208a1f3192ea068" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::operator==</definition>
        <argsstring>(const LineString &amp;aLineString) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref> &amp;</type>
          <declname>aLineString</declname>
        </param>
        <briefdescription>
<para>Equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>A line string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if line strings are equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="66" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="32" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a53f5cb0e9c9b0c4750b398d1abd24762" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::operator!=</definition>
        <argsstring>(const LineString &amp;aLineString) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref> &amp;</type>
          <declname>aLineString</declname>
        </param>
        <briefdescription>
<para>Not equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>A line string </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if line strings are not equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="73" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="37" bodyend="40"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ad8e472cb5b6c7fe87374a1476b8835b7" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::isDefined</definition>
        <argsstring>() const override</argsstring>
        <name>isDefined</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1abe5ea18c13bc259fc0da0b0c49fa0dca">isDefined</reimplements>
        <briefdescription>
<para>Check if line string is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString(0.0,<sp/>0.0).isDefined()<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if line string is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="83" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="42" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ac2a570d2617759b4e5d9e802ba9abade" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
<para>Check if line string is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString::Empty().isEmpty()<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if line string is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="93" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="47" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a6c13eb4d91446900ddda8f0040455020" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::contains</definition>
        <argsstring>(const Point &amp;aPoint) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
<para>Check if line string contains a point. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString({<sp/>{<sp/>0.0,<sp/>0.0<sp/>},<sp/>{<sp/>0.0,<sp/>1.0<sp/>},<sp/>{<sp/>1.0,<sp/>0.0<sp/>}<sp/>}).contains({<sp/>0.0,<sp/>0.5<sp/>})<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if line string contains a point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="103" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="52" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a93f187300021999caf7c48efabcb3265" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::LineString::isNear</definition>
        <argsstring>(const LineString &amp;aLineString, const Real &amp;aTolerance) const</argsstring>
        <name>isNear</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref> &amp;</type>
          <declname>aLineString</declname>
        </param>
        <param>
          <type>const Real &amp;</type>
          <declname>aTolerance</declname>
        </param>
        <briefdescription>
<para>Check if line string is near another line string. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString({<sp/>{<sp/>0.0,<sp/>0.0<sp/>},<sp/>{<sp/>0.0,<sp/>1.0<sp/>},<sp/>{<sp/>1.0,<sp/>0.0<sp/>}<sp/>}).isNear(LineString({<sp/>{<sp/>0.0,<sp/>0.0<sp/>},<sp/>{</highlight></codeline>
<codeline><highlight class="normal">0.0,<sp/>1.0<sp/>},<sp/>{<sp/>1.0,<sp/>1e-15<sp/>}<sp/>}),<sp/>1e-15)<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aLineString</parametername>
</parameternamelist>
<parameterdescription>
<para>A line string </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aTolerance</parametername>
</parameternamelist>
<parameterdescription>
<para>A tolerance </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if line string is near another line string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="116" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="90" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a66e45823757b2fa9a486729e02a91b94" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Array&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &gt; &amp;</type>
        <definition>const Array&lt; Point &gt; &amp; ostk::mathematics::geometry::d2::object::LineString::getPointArray</definition>
        <argsstring>() const</argsstring>
        <name>getPointArray</name>
        <briefdescription>
<para>Get point array. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> array </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="122" column="17" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="113" bodyend="116"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ad45555762f8bc004139ca09e49432d8a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
        <definition>const Point &amp; ostk::mathematics::geometry::d2::object::LineString::accessPointAt</definition>
        <argsstring>(const Index &amp;anIndex) const</argsstring>
        <name>accessPointAt</name>
        <param>
          <type>const Index &amp;</type>
          <declname>anIndex</declname>
        </param>
        <briefdescription>
<para>Access point at index. </para>
        </briefdescription>
        <detaileddescription>
<para>[in] anIndex A point index <simplesect kind="return"><para>Reference to point at index </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="129" column="17" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a31ff5ebe4cb0e03f08a68218ec7723c0" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size ostk::mathematics::geometry::d2::object::LineString::getPointCount</definition>
        <argsstring>() const</argsstring>
        <name>getPointCount</name>
        <briefdescription>
<para>Get point count. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> count </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="135" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ae59decef7e902caadca16d171658701e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point ostk::mathematics::geometry::d2::object::LineString::getPointClosestTo</definition>
        <argsstring>(const Point &amp;aPoint) const</argsstring>
        <name>getPointClosestTo</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
<para>Get point closest to another point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Closest point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="142" column="11" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="133" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a896eb59a09118ed324b444616538c699" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>String</type>
        <definition>String ostk::mathematics::geometry::d2::object::LineString::toString</definition>
        <argsstring>(const Object::Format &amp;aFormat=Object::Format::Standard, const Integer &amp;aPrecision=Integer::Undefined()) const override</argsstring>
        <name>toString</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1aedf9c7ef5af5892d15cf08da795fa1af">toString</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13" kindref="member">Object::Format</ref> &amp;</type>
          <declname>aFormat</declname>
          <defval><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13aeb6d8ae6f20283755b339c0dc273988b" kindref="member">Object::Format::Standard</ref></defval>
        </param>
        <param>
          <type>const Integer &amp;</type>
          <declname>aPrecision</declname>
          <defval>Integer::Undefined()</defval>
        </param>
        <briefdescription>
<para>Get string representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>A format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="149" column="20" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="163" bodyend="222"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a292e3bf679e232f605e4726f0bfff970" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d2::object::LineString::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorators=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1aaf59b52c718ca92c6b6116660077d9f9">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorators</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print point. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">(optional)</parametername>
</parameternamelist>
<parameterdescription>
<para>displayDecorators If true, display decorators </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="158" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="224" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a51ad3a2adffa4a272897a22593da1428" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1acacd5fbb50b8d1b38b2d90b9139cbfa9" kindref="member">LineString::ConstIterator</ref></type>
        <definition>LineString::ConstIterator ostk::mathematics::geometry::d2::object::LineString::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Get begin const iterator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Begin const iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="164" column="31" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ac4688c0d0f28a9627add88395df8337f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1acacd5fbb50b8d1b38b2d90b9139cbfa9" kindref="member">LineString::ConstIterator</ref></type>
        <definition>LineString::ConstIterator ostk::mathematics::geometry::d2::object::LineString::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Get end const iterator. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>End const iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="170" column="31" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="241" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a0d3a24eba42a2d7449259b890d0bb30f" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d2::object::LineString::applyTransformation</definition>
        <argsstring>(const Transformation &amp;aTransformation) override</argsstring>
        <name>applyTransformation</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1add0c7edfac25cbd241f82edbb1ce1476">applyTransformation</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>aTransformation</declname>
        </param>
        <briefdescription>
<para>Apply transformation to line string. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aTransformation</parametername>
</parameternamelist>
<parameterdescription>
<para>A transformation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="176" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="246" bodyend="262"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a1c013105d818b7e58ce82ba781ad5e95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref></type>
        <definition>LineString ostk::mathematics::geometry::d2::object::LineString::Empty</definition>
        <argsstring>()</argsstring>
        <name>Empty</name>
        <briefdescription>
<para>Constructs an empty line string. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">LineString<sp/>lineString<sp/>=<sp/>LineString::Empty()<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Empty line string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="186" column="23" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1aa04a6a68ea74f4702d1d98baa78b050d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string" kindref="compound">LineString</ref></type>
        <definition>LineString ostk::mathematics::geometry::d2::object::LineString::Segment</definition>
        <argsstring>(const object::Segment &amp;aSegment)</argsstring>
        <name>Segment</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_segment" kindref="compound">object::Segment</ref> &amp;</type>
          <declname>aSegment</declname>
        </param>
        <briefdescription>
<para>Constructs a line string from a segment. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Segment<sp/>segment<sp/>=<sp/>{<sp/>{<sp/>0.0,<sp/>0.0<sp/>},<sp/>{<sp/>0.0,<sp/>1.0<sp/>}<sp/>}<sp/>;</highlight></codeline>
<codeline><highlight class="normal">LineString<sp/>lineString<sp/>=<sp/>LineString::Segment(segment)<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line" kindref="compound">Line</ref> string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="197" column="23" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.cpp" bodystart="269" bodyend="277"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line" kindref="compound">Line</ref> string. </para>
    </briefdescription>
    <detaileddescription>
<para><verbatim>                        A line string is a connected series of line segments.
</verbatim></para>
<para><ulink url="https://en.wikipedia.org/wiki/Polygonal_chain">https://en.wikipedia.org/wiki/Polygonal_chain</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ostk::mathematics::geometry::d2::object::LineString</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::mathematics::geometry::d2::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ostk::mathematics::geometry::d2::object::LineString</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::mathematics::geometry::d2::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object"/>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" line="41" column="1" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/LineString.hpp" bodystart="40" bodyend="201"/>
    <listofallmembers>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ad45555762f8bc004139ca09e49432d8a" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>accessPointAt</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a0d3a24eba42a2d7449259b890d0bb30f" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>applyTransformation</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a51ad3a2adffa4a272897a22593da1428" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>begin</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a37f35461ca951c8a01b50631500cddd8" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>clone</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1acacd5fbb50b8d1b38b2d90b9139cbfa9" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>ConstIterator</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a6c13eb4d91446900ddda8f0040455020" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a43eaa4a59d81e7eb36b80f6695de6ce1" prot="public" virt="virtual" ambiguityscope="ostk::mathematics::geometry::d2::Object::"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a1c013105d818b7e58ce82ba781ad5e95" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>Empty</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ac4688c0d0f28a9627add88395df8337f" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>end</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>Format</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a66e45823757b2fa9a486729e02a91b94" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>getPointArray</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ae59decef7e902caadca16d171658701e" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>getPointClosestTo</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a31ff5ebe4cb0e03f08a68218ec7723c0" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>getPointCount</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a553d7a1e388598c74d0f9fdd57d1ba9d" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ad8e472cb5b6c7fe87374a1476b8835b7" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>isDefined</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1ac2a570d2617759b4e5d9e802ba9abade" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>isEmpty</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a93f187300021999caf7c48efabcb3265" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>isNear</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1af664c958b514884a3889eab433c5482d" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>LineString</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a15a959fd5b624d6fcc6725982a8cddf8" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>Object</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a53f5cb0e9c9b0c4750b398d1abd24762" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1afe72ba03919d609d2847b0b4162d083d" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d2::Object::"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a9a5ce9c1b26bbad9f208a1f3192ea068" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9617246a3e26d57e5ba78e57387ae05a" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d2::Object::"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a684ec38d99af1a390759978aabe670cd" prot="private" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>points_</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a292e3bf679e232f605e4726f0bfff970" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>print</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1aa04a6a68ea74f4702d1d98baa78b050d" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>Segment</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_line_string_1a896eb59a09118ed324b444616538c699" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>toString</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1af11dec981b2e1ab08deae342ec2c4ef8" prot="public" virt="pure-virtual"><scope>ostk::mathematics::geometry::d2::object::LineString</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
