<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kind="class" language="C++" prot="public">
    <compoundname>ostk::mathematics::geometry::d2::object::Composite</compoundname>
    <basecompoundref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" prot="public" virt="non-virtual">ostk::mathematics::geometry::d2::Object</basecompoundref>
    <includes refid="2_d_2_object_2_composite_8hpp" local="no">Composite.hpp</includes>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a34efd57a99c61f2e4e63fd6444dae04f" prot="public" static="no">
        <type>Array&lt; Unique&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &gt; &gt;::<ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a34efd57a99c61f2e4e63fd6444dae04f" kindref="member">ConstIterator</ref></type>
        <definition>typedef Array&lt;Unique&lt;Object&gt; &gt;::ConstIterator ostk::mathematics::geometry::d2::object::Composite::ConstIterator</definition>
        <argsstring></argsstring>
        <name>ConstIterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="37" column="35" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a7743ef006e6922d181aa0beae1d0d65f" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::defined_</definition>
        <argsstring></argsstring>
        <name>defined_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="304" column="10" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="304" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a9f14c3882aa77b394b1fd325c9cbafe4" prot="private" static="no" mutable="no">
        <type>Array&lt; Unique&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &gt; &gt;</type>
        <definition>Array&lt;Unique&lt;Object&gt; &gt; ostk::mathematics::geometry::d2::object::Composite::objects_</definition>
        <argsstring></argsstring>
        <name>objects_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="305" column="11" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="305" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a46840777485fc459449f36c304ef8989" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d2::object::Composite::Composite</definition>
        <argsstring>(const Object &amp;anObject)</argsstring>
        <name>Composite</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>anObject</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObject</parametername>
</parameternamelist>
<parameterdescription>
<para>An object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="43" column="14" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="21" bodyend="27"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a40e91d9468ac09b2b87155b79d196d1d" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d2::object::Composite::Composite</definition>
        <argsstring>(const Unique&lt; Object &gt; &amp;anObjectUPtr)</argsstring>
        <name>Composite</name>
        <param>
          <type>const Unique&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &gt; &amp;</type>
          <declname>anObjectUPtr</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObjectUPtr</parametername>
</parameternamelist>
<parameterdescription>
<para>A unique pointer to object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="49" column="14" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="29" bodyend="35"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a66437dec2907929057147bcf7e6cd364" prot="public" static="no" const="no" explicit="yes" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d2::object::Composite::Composite</definition>
        <argsstring>(Array&lt; Unique&lt; Object &gt;&gt; &amp;&amp;anObjectArray)</argsstring>
        <name>Composite</name>
        <param>
          <type>Array&lt; Unique&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &gt;&gt; &amp;&amp;</type>
          <declname>anObjectArray</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObjectArray</parametername>
</parameternamelist>
<parameterdescription>
<para>An array of unique pointers to object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="55" column="14" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="37" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae777b05fd25e69c98d8d664b6a3e4e14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d2::object::Composite::Composite</definition>
        <argsstring>(const Composite &amp;aComposite)</argsstring>
        <name>Composite</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Copy constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="61" column="5" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="55" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a19f3ba420ea69eefa3a2b948d59a2fab" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> *</type>
        <definition>Composite * ostk::mathematics::geometry::d2::object::Composite::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1af63da855554f9114803103fe2390f5eb">clone</reimplements>
        <briefdescription>
<para>Clone composite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to cloned composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="67" column="23" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="73" bodyend="76"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a6ceb4ff7945166c63292269531ecf722" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
        <definition>Composite &amp; ostk::mathematics::geometry::d2::object::Composite::operator=</definition>
        <argsstring>(const Composite &amp;aComposite)</argsstring>
        <name>operator=</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Copy assignment operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="74" column="15" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="78" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aaa0ab4bcefcb11d05ddfcdea811f7d0b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::operator==</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composites are equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="81" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="102" bodyend="123"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a11fcec32f83c456a485ccd5e8bcdc98f" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::operator!=</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Not equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composites are not equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="88" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a6a1d39238f6b47334b4d6d5b57cd766d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref></type>
        <definition>Composite ostk::mathematics::geometry::d2::object::Composite::operator+</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Addition operator (composite concatenation) </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>                Concatenate (merge) composite with another composite.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Concatenated composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="97" column="15" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="130" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1af5ed721c02883767d4a2270bfe32a155" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
        <definition>Composite &amp; ostk::mathematics::geometry::d2::object::Composite::operator+=</definition>
        <argsstring>(const Composite &amp;aComposite)</argsstring>
        <name>operator+=</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Addition assignment operator (composite concatenation) </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>                Concatenate (merge) composite with another composite.
</verbatim></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to concatenated composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="106" column="15" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="168" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a8978d917810e68bb9e6b484fc97524c3" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::isDefined</definition>
        <argsstring>() const override</argsstring>
        <name>isDefined</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1abe5ea18c13bc259fc0da0b0c49fa0dca">isDefined</reimplements>
        <briefdescription>
<para>Check if composite is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Composite(...).isDefined()<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if composite is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="116" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="195" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ac4ad3c0b11203ad5c8eb3e455edaf3a2" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::isEmpty</definition>
        <argsstring>() const</argsstring>
        <name>isEmpty</name>
        <briefdescription>
<para>Check if composite is empty. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Composite(...).isEmpty()<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if composite is empty </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="126" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="207" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a569c373be972804901329c2b2886edba" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::is</definition>
        <argsstring>() const</argsstring>
        <name>is</name>
        <briefdescription>
<para>Returns true if composite can be converted to underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>                Only valid if the composite only contains one object.
</verbatim></para>
<para><simplesect kind="return"><para>True if composite can be converted to underlying object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="135" column="10" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="135" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a1736931ccff0a138dbbf02b87bd6b5a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class Type</type>
          </param>
        </templateparamlist>
        <type>const Type &amp;</type>
        <definition>const Type&amp; ostk::mathematics::geometry::d2::object::Composite::as</definition>
        <argsstring>() const</argsstring>
        <name>as</name>
        <briefdescription>
<para>Access composite as its underlying object. </para>
        </briefdescription>
        <detaileddescription>
<para><verbatim>                Only valid if the composite only contains one object.
</verbatim></para>
<para><simplesect kind="return"><para>Reference to underlying object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="152" column="16" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="152" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a268fb26bb98a77e6ddca626901e9449e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::intersects</definition>
        <argsstring>(const Object &amp;anObject) const</argsstring>
        <name>intersects</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a553d7a1e388598c74d0f9fdd57d1ba9d">intersects</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>anObject</declname>
        </param>
        <briefdescription>
<para>Check if composite intersects object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObject</parametername>
</parameternamelist>
<parameterdescription>
<para>An object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composite intersects object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="179" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="217" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae79948364d0502c3b6f839ce90e00b45" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::intersects</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Check if composite intersects composite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composite intersects composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="186" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="239" bodyend="259"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a9c1fbdcbb36a4689a047ec6a9e887ebc" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::contains</definition>
        <argsstring>(const Object &amp;anObject) const</argsstring>
        <name>contains</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a43eaa4a59d81e7eb36b80f6695de6ce1">contains</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>anObject</declname>
        </param>
        <briefdescription>
<para>Check if composite contains object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObject</parametername>
</parameternamelist>
<parameterdescription>
<para>An object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composite contains object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="193" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="261" bodyend="286"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aff95d8fa19dde2346269555c4b8e05cf" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::contains</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Check if composite contains composite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if composite contains composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="200" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="288" bodyend="313"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a2249520e6059ea385d2b7bd2ff4b78ae" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::anyContains</definition>
        <argsstring>(const Object &amp;anObject) const</argsstring>
        <name>anyContains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &amp;</type>
          <declname>anObject</declname>
        </param>
        <briefdescription>
<para>Check if composite contains object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObject</parametername>
</parameternamelist>
<parameterdescription>
<para>An object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if any objects in composite contains object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="207" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="315" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae6722f4d87b91c43645c2176c7effe47" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d2::object::Composite::anyContains</definition>
        <argsstring>(const Composite &amp;aComposite) const</argsstring>
        <name>anyContains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> &amp;</type>
          <declname>aComposite</declname>
        </param>
        <briefdescription>
<para>Check if composite contains composite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aComposite</parametername>
</parameternamelist>
<parameterdescription>
<para>A composite </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if any objects in composite contains composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="214" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="342" bodyend="367"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a05508e89ea2f4af51e9cc5c11f297bf9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &amp;</type>
        <definition>const Object &amp; ostk::mathematics::geometry::d2::object::Composite::accessObjectAt</definition>
        <argsstring>(const Index &amp;anIndex) const</argsstring>
        <name>accessObjectAt</name>
        <param>
          <type>const Index &amp;</type>
          <declname>anIndex</declname>
        </param>
        <briefdescription>
<para>Access object at index. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>An object index </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="221" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="369" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5559e88bf01995f1c798d9083712758c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>const Array&lt; Unique&lt; <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object" kindref="compound">Object</ref> &gt; &gt; &amp;</type>
        <definition>const Array&lt; Unique&lt; Object &gt; &gt; &amp; ostk::mathematics::geometry::d2::object::Composite::accessObjects</definition>
        <argsstring>() const</argsstring>
        <name>accessObjects</name>
        <briefdescription>
<para>Access objects in composite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Reference to objects in composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="227" column="17" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="384" bodyend="392"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a823c0b72b4adcdd660b3d2eb874f0b93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Size</type>
        <definition>Size ostk::mathematics::geometry::d2::object::Composite::getObjectCount</definition>
        <argsstring>() const</argsstring>
        <name>getObjectCount</name>
        <briefdescription>
<para>Get number of objects in composite. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Number of objects in composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="233" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="394" bodyend="402"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a89beece656a90043d888c5cdd4504753" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a34efd57a99c61f2e4e63fd6444dae04f" kindref="member">Composite::ConstIterator</ref></type>
        <definition>Composite::ConstIterator ostk::mathematics::geometry::d2::object::Composite::begin</definition>
        <argsstring>() const</argsstring>
        <name>begin</name>
        <briefdescription>
<para>Compute intersection of composite with object. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anObject</parametername>
</parameternamelist>
<parameterdescription>
<para>An object </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_intersection" kindref="compound">Intersection</ref> of composite with object </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="253" column="30" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="466" bodyend="474"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a01d075d05560cae44d5fc4fa17f3594c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a34efd57a99c61f2e4e63fd6444dae04f" kindref="member">Composite::ConstIterator</ref></type>
        <definition>Composite::ConstIterator ostk::mathematics::geometry::d2::object::Composite::end</definition>
        <argsstring>() const</argsstring>
        <name>end</name>
        <briefdescription>
<para>Get const iterator to end. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Const iterator to end </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="259" column="30" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="476" bodyend="484"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5b9183cde21c414bc8a12e2e079e4ed1" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>String</type>
        <definition>String ostk::mathematics::geometry::d2::object::Composite::toString</definition>
        <argsstring>(const Object::Format &amp;aFormat=Object::Format::Standard, const Integer &amp;aPrecision=Integer::Undefined()) const override</argsstring>
        <name>toString</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1aedf9c7ef5af5892d15cf08da795fa1af">toString</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13" kindref="member">Object::Format</ref> &amp;</type>
          <declname>aFormat</declname>
          <defval><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13aeb6d8ae6f20283755b339c0dc273988b" kindref="member">Object::Format::Standard</ref></defval>
        </param>
        <param>
          <type>const Integer &amp;</type>
          <declname>aPrecision</declname>
          <defval>Integer::Undefined()</defval>
        </param>
        <briefdescription>
<para>Get string representation. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aFormat</parametername>
</parameternamelist>
<parameterdescription>
<para>A format </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>String representation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="266" column="20" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="486" bodyend="501"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a68feee2a993e698e796db61bc27a6167" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d2::object::Composite::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorators=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1aaf59b52c718ca92c6b6116660077d9f9">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorators</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print composite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">(optional)</parametername>
</parameternamelist>
<parameterdescription>
<para>displayDecorators If true, display decorators </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="275" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="503" bodyend="522"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aa1fd52d4955be0b4ee647ac2971e72bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d2::object::Composite::applyTransformation</definition>
        <argsstring>(const Transformation &amp;aTransformation) override</argsstring>
        <name>applyTransformation</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1add0c7edfac25cbd241f82edbb1ce1476">applyTransformation</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>aTransformation</declname>
        </param>
        <briefdescription>
<para>Apply transformation to composite. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aTransformation</parametername>
</parameternamelist>
<parameterdescription>
<para>A transformation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="281" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="524" bodyend="545"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a68ef0c5cbb3fde1c662f60c5f137fe60" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref></type>
        <definition>Composite ostk::mathematics::geometry::d2::object::Composite::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Constructs an undefined composite. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Composite<sp/>composite<sp/>=<sp/>Composite::Undefined()<sp/>;<sp/>//<sp/>Undefined</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Undefined composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="291" column="22" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="547" bodyend="554"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5704d4c2404b89ef12ccf562fd48a7f5" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref></type>
        <definition>Composite ostk::mathematics::geometry::d2::object::Composite::Empty</definition>
        <argsstring>()</argsstring>
        <name>Empty</name>
        <briefdescription>
<para>Constructs an empty composite. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Composite<sp/>composite<sp/>=<sp/>Composite::Empty()<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Empty composite </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="301" column="22" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.cpp" bodystart="556" bodyend="559"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite" kindref="compound">Composite</ref> object. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>ostk::mathematics::geometry::d2::object::Composite</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::mathematics::geometry::d2::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>ostk::mathematics::geometry::d2::object::Composite</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>ostk::mathematics::geometry::d2::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object"/>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" line="35" column="1" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/2D/Object/Composite.hpp" bodystart="34" bodyend="306"/>
    <listofallmembers>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a05508e89ea2f4af51e9cc5c11f297bf9" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>accessObjectAt</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5559e88bf01995f1c798d9083712758c" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>accessObjects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a2249520e6059ea385d2b7bd2ff4b78ae" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>anyContains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae6722f4d87b91c43645c2176c7effe47" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>anyContains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aa1fd52d4955be0b4ee647ac2971e72bf" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>applyTransformation</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a1736931ccff0a138dbbf02b87bd6b5a7" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>as</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a89beece656a90043d888c5cdd4504753" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>begin</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a19f3ba420ea69eefa3a2b948d59a2fab" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>clone</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a46840777485fc459449f36c304ef8989" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Composite</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a40e91d9468ac09b2b87155b79d196d1d" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Composite</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a66437dec2907929057147bcf7e6cd364" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Composite</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae777b05fd25e69c98d8d664b6a3e4e14" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Composite</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a34efd57a99c61f2e4e63fd6444dae04f" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>ConstIterator</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a9c1fbdcbb36a4689a047ec6a9e887ebc" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aff95d8fa19dde2346269555c4b8e05cf" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a7743ef006e6922d181aa0beae1d0d65f" prot="private" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>defined_</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5704d4c2404b89ef12ccf562fd48a7f5" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Empty</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a01d075d05560cae44d5fc4fa17f3594c" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>end</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9ba9529b76d02fa7e4d1d285a8cf1c13" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Format</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a823c0b72b4adcdd660b3d2eb874f0b93" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>getObjectCount</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a268fb26bb98a77e6ddca626901e9449e" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ae79948364d0502c3b6f839ce90e00b45" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a569c373be972804901329c2b2886edba" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>is</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a8978d917810e68bb9e6b484fc97524c3" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>isDefined</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1ac4ad3c0b11203ad5c8eb3e455edaf3a2" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>isEmpty</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a15a959fd5b624d6fcc6725982a8cddf8" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Object</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a9f14c3882aa77b394b1fd325c9cbafe4" prot="private" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>objects_</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a11fcec32f83c456a485ccd5e8bcdc98f" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1afe72ba03919d609d2847b0b4162d083d" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d2::Object::"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a6a1d39238f6b47334b4d6d5b57cd766d" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator+</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1af5ed721c02883767d4a2270bfe32a155" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator+=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a6ceb4ff7945166c63292269531ecf722" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1aaa0ab4bcefcb11d05ddfcdea811f7d0b" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1a9617246a3e26d57e5ba78e57387ae05a" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d2::Object::"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a68feee2a993e698e796db61bc27a6167" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>print</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a5b9183cde21c414bc8a12e2e079e4ed1" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>toString</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1object_1_1_composite_1a68ef0c5cbb3fde1c662f60c5f137fe60" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>Undefined</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d2_1_1_object_1af11dec981b2e1ab08deae342ec2c4ef8" prot="public" virt="pure-virtual"><scope>ostk::mathematics::geometry::d2::object::Composite</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
