<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kind="class" language="C++" prot="public">
    <compoundname>ostk::mathematics::geometry::d3::object::Sphere</compoundname>
    <basecompoundref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object" prot="public" virt="non-virtual">ostk::mathematics::geometry::d3::Object</basecompoundref>
    <includes refid="_sphere_8hpp" local="no">Sphere.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a1a713f929110c5bcd656a3d56a024935" prot="private" static="no" mutable="no">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point ostk::mathematics::geometry::d3::object::Sphere::center_</definition>
        <argsstring></argsstring>
        <name>center_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="345" column="11" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" bodystart="345" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ab031f3603f4983ac84c37a719f6a31b0" prot="private" static="no" mutable="no">
        <type>Real</type>
        <definition>Real ostk::mathematics::geometry::d3::object::Sphere::radius_</definition>
        <argsstring></argsstring>
        <name>radius_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="346" column="10" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" bodystart="346" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a44cf858e4351d1890cc1116bb85f9850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>ostk::mathematics::geometry::d3::object::Sphere::Sphere</definition>
        <argsstring>(const Point &amp;aCenter, const Real &amp;aRadius)</argsstring>
        <name>Sphere</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aCenter</declname>
        </param>
        <param>
          <type>const Real &amp;</type>
          <declname>aRadius</declname>
        </param>
        <briefdescription>
<para>Constructor. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere({<sp/>0.0,<sp/>0.0,<sp/>0.0<sp/>},<sp/>1.0)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aCenter</parametername>
</parameternamelist>
<parameterdescription>
<para>A sphere center </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aRadius</parametername>
</parameternamelist>
<parameterdescription>
<para>A sphere radius </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="58" column="5" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="51" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a28e9a96d726b5eea0da0696647912780" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref> *</type>
        <definition>Sphere * ostk::mathematics::geometry::d3::object::Sphere::clone</definition>
        <argsstring>() const override</argsstring>
        <name>clone</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a8ea8d4074bfaaa3d996d760d5d5751db">clone</reimplements>
        <briefdescription>
<para>Clone sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Pointer to cloned sphere </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="64" column="20" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="58" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a86fab4da986e79ea843646b859a54b7b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::operator==</definition>
        <argsstring>(const Sphere &amp;aSphere) const</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>aSphere</declname>
        </param>
        <briefdescription>
<para>Equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0)<sp/>==<sp/>Sphere(Point::Origin(),<sp/>1.0)<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aSphere</parametername>
</parameternamelist>
<parameterdescription>
<para>A sphere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if spheres are equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="75" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="63" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a48d995d87aaf80ffae9629d33137e50a" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::operator!=</definition>
        <argsstring>(const Sphere &amp;aSphere) const</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref> &amp;</type>
          <declname>aSphere</declname>
        </param>
        <briefdescription>
<para>Not equal to operator. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0)<sp/>!=<sp/>Sphere(Point::Origin(),<sp/>2.0)<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aSphere</parametername>
</parameternamelist>
<parameterdescription>
<para>A sphere </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if spheres are not equal </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="86" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="73" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a5311446aca36ccadbd8ae323502dba44" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::isDefined</definition>
        <argsstring>() const override</argsstring>
        <name>isDefined</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a1962edbcdde0f851361b60324ab9ce2b">isDefined</reimplements>
        <briefdescription>
<para>Check if sphere is defined. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0).isDefined()<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if sphere is defined </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="96" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a9dbed5ac4eec1c9a79eedf5408191021" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::isUnitary</definition>
        <argsstring>() const</argsstring>
        <name>isUnitary</name>
        <briefdescription>
<para>Check if sphere is unitary, i.e. its radius is equal to 1.0. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0).isUnitary()<sp/>;<sp/>//<sp/>True</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>True if sphere is unitary </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="106" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="88" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1afc06f6968104f1207b1f3da7ceaae4aa" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Point &amp;aPoint) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects point. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Point<sp/>point<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(point)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="119" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="98" bodyend="101"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1adbdedf8a33a33ecf34f4c8a45f365c0d" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const PointSet &amp;aPointSet) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point_set" kindref="compound">PointSet</ref> &amp;</type>
          <declname>aPointSet</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects point set. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">PointSet<sp/>pointSet<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(pointSet)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPointSet</parametername>
</parameternamelist>
<parameterdescription>
<para>A point set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects point set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="132" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="103" bodyend="118"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1aa26ce6b341283ea77b99207a05368a52" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Line &amp;aLine) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_line" kindref="compound">Line</ref> &amp;</type>
          <declname>aLine</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects line. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Line<sp/>line<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(line)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aLine</parametername>
</parameternamelist>
<parameterdescription>
<para>A line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects line </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="145" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="120" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a669b7ac4228e1bf40fa0ffabc3cddde9" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Ray &amp;aRay) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>aRay</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects ray. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Ray<sp/>ray<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(ray)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aRay</parametername>
</parameternamelist>
<parameterdescription>
<para>A ray </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects ray </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="158" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="153" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a26a485b4674c7f852f07652297adf8b4" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Segment &amp;aSegment) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
          <declname>aSegment</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects segment. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Segment<sp/>segment<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(segment)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aSegment</parametername>
</parameternamelist>
<parameterdescription>
<para>A segment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects segment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="171" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="186" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a38e7ed98b7f10761bdf7c5d87315a460" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Plane &amp;aPlane) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_plane" kindref="compound">Plane</ref> &amp;</type>
          <declname>aPlane</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects plane. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Plane<sp/>plane<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(plane)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPlane</parametername>
</parameternamelist>
<parameterdescription>
<para>A plane </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects plane </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="184" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="219" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ad2c172f9ed998e785986b13bffeb6c93" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Ellipsoid &amp;anEllipsoid) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_ellipsoid" kindref="compound">Ellipsoid</ref> &amp;</type>
          <declname>anEllipsoid</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects ellipsoid. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Ellipsoid<sp/>ellipsoid<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(ellipsoid)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anEllipsoid</parametername>
</parameternamelist>
<parameterdescription>
<para>An ellipsoid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects ellipsoid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="197" column="10"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a3ec429fe276d4da08dea92c56c008fc5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Pyramid &amp;aPyramid) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_pyramid" kindref="compound">Pyramid</ref> &amp;</type>
          <declname>aPyramid</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects pyramid. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Pyramid<sp/>pyramid<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(pyramid)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPyramid</parametername>
</parameternamelist>
<parameterdescription>
<para>A pyramid </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects pyramid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="210" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="253" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a3b3ce9155edeeab7fbaec2cbdde06f41" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::intersects</definition>
        <argsstring>(const Cone &amp;aCone) const</argsstring>
        <name>intersects</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_cone" kindref="compound">Cone</ref> &amp;</type>
          <declname>aCone</declname>
        </param>
        <briefdescription>
<para>Check if sphere intersects cone. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Cone<sp/>cone<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.intersects(cone)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aCone</parametername>
</parameternamelist>
<parameterdescription>
<para>A cone </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere intersects cone </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="223" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="258" bodyend="261"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a4a3a9cec2f8df6799344ea779a635fd5" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::contains</definition>
        <argsstring>(const Point &amp;aPoint) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aPoint</declname>
        </param>
        <briefdescription>
<para>Check if sphere contains point. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Point<sp/>point<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.contains(point)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPoint</parametername>
</parameternamelist>
<parameterdescription>
<para>A point </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere contains point </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="236" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="263" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ac55784d01e1ab5c8ea2b800dc844448b" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool ostk::mathematics::geometry::d3::object::Sphere::contains</definition>
        <argsstring>(const PointSet &amp;aPointSet) const</argsstring>
        <name>contains</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point_set" kindref="compound">PointSet</ref> &amp;</type>
          <declname>aPointSet</declname>
        </param>
        <briefdescription>
<para>Check if sphere contains point set. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">PointSet<sp/>pointSet<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">sphere.contains(pointSet)<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPointSet</parametername>
</parameternamelist>
<parameterdescription>
<para>A point set </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>True if sphere contains point set </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="249" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="280" bodyend="295"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a02fcea7a4eaae6f396bc09e09bcc6966" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref></type>
        <definition>Point ostk::mathematics::geometry::d3::object::Sphere::getCenter</definition>
        <argsstring>() const</argsstring>
        <name>getCenter</name>
        <briefdescription>
<para>Get sphere center. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0).getCenter()<sp/>;<sp/>//<sp/>[0.0,<sp/>0.0,<sp/>0.0]</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref> center </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="259" column="11" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="297" bodyend="305"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a391da737aed2cd3615f9992949c07abe" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type>Real</type>
        <definition>Real ostk::mathematics::geometry::d3::object::Sphere::getRadius</definition>
        <argsstring>() const</argsstring>
        <name>getRadius</name>
        <briefdescription>
<para>Get sphere radius. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere(Point::Origin(),<sp/>1.0).getRadius()<sp/>;<sp/>//<sp/>1.0</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref> radius </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="269" column="10" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="307" bodyend="315"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1af155cd1d10cd5b010b134a29e6d67492" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref></type>
        <definition>Intersection ostk::mathematics::geometry::d3::object::Sphere::intersectionWith</definition>
        <argsstring>(const Line &amp;aLine) const</argsstring>
        <name>intersectionWith</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_line" kindref="compound">Line</ref> &amp;</type>
          <declname>aLine</declname>
        </param>
        <briefdescription>
<para>Compute intersection of sphere with line. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aLine</parametername>
</parameternamelist>
<parameterdescription>
<para>A line </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref> of sphere with line </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="276" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="317" bodyend="369"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1abfdfa4f19cb716271505c28d7085d2da" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref></type>
        <definition>Intersection ostk::mathematics::geometry::d3::object::Sphere::intersectionWith</definition>
        <argsstring>(const Ray &amp;aRay, const bool onlyInSight=DEFAULT_ONLY_IN_SIGHT) const</argsstring>
        <name>intersectionWith</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_ray" kindref="compound">Ray</ref> &amp;</type>
          <declname>aRay</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onlyInSight</declname>
          <defval><ref refid="_sphere_8hpp_1af424617f7c785f4835e2feba5a5640f2" kindref="member">DEFAULT_ONLY_IN_SIGHT</ref></defval>
        </param>
        <briefdescription>
<para>Compute intersection of sphere with ray. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aRay</parametername>
</parameternamelist>
<parameterdescription>
<para>A ray </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyInSight</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) If true, only return intersection points that are in sight </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref> of sphere with ray </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="284" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="371" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a66e7d89eaf128a2ee1277a605f25ab7e" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref></type>
        <definition>Intersection ostk::mathematics::geometry::d3::object::Sphere::intersectionWith</definition>
        <argsstring>(const Segment &amp;aSegment) const</argsstring>
        <name>intersectionWith</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_segment" kindref="compound">Segment</ref> &amp;</type>
          <declname>aSegment</declname>
        </param>
        <briefdescription>
<para>Compute intersection of sphere with segment. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aSegment</parametername>
</parameternamelist>
<parameterdescription>
<para>A segment </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref> of sphere with segment </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="291" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="450" bodyend="556"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ad710eeb805c0152d53dc874131f5f758" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref></type>
        <definition>Intersection ostk::mathematics::geometry::d3::object::Sphere::intersectionWith</definition>
        <argsstring>(const Pyramid &amp;aPyramid, const bool onlyInSight=DEFAULT_ONLY_IN_SIGHT) const</argsstring>
        <name>intersectionWith</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_pyramid" kindref="compound">Pyramid</ref> &amp;</type>
          <declname>aPyramid</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onlyInSight</declname>
          <defval><ref refid="_sphere_8hpp_1af424617f7c785f4835e2feba5a5640f2" kindref="member">DEFAULT_ONLY_IN_SIGHT</ref></defval>
        </param>
        <briefdescription>
<para>Compute intersection of sphere with pyramid. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aPyramid</parametername>
</parameternamelist>
<parameterdescription>
<para>A pyramid </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyInSight</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) If true, only return intersection points that are in sight </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref> of sphere with pyramid </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="299" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="558" bodyend="561"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ae16d1ba9ed85bb8b7716202a651c262c" prot="public" static="no" const="yes" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref></type>
        <definition>Intersection ostk::mathematics::geometry::d3::object::Sphere::intersectionWith</definition>
        <argsstring>(const Cone &amp;aCone, const bool onlyInSight=DEFAULT_ONLY_IN_SIGHT) const</argsstring>
        <name>intersectionWith</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_cone" kindref="compound">Cone</ref> &amp;</type>
          <declname>aCone</declname>
        </param>
        <param>
          <type>const bool</type>
          <declname>onlyInSight</declname>
          <defval><ref refid="_sphere_8hpp_1af424617f7c785f4835e2feba5a5640f2" kindref="member">DEFAULT_ONLY_IN_SIGHT</ref></defval>
        </param>
        <briefdescription>
<para>Compute intersection of sphere with cone. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aCone</parametername>
</parameternamelist>
<parameterdescription>
<para>A cone </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">onlyInSight</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) If true, only return intersection points that are in sight </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_intersection" kindref="compound">Intersection</ref> of sphere with cone </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="307" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="563" bodyend="566"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ae7a968c5f386c5f9019389e6e3fca138" prot="public" static="no" const="yes" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d3::object::Sphere::print</definition>
        <argsstring>(std::ostream &amp;anOutputStream, bool displayDecorators=true) const override</argsstring>
        <name>print</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a5063e1f902e1b08d36f6b6cecab0bd95">print</reimplements>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>displayDecorators</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
<para>Print sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">(optional)</parametername>
</parameternamelist>
<parameterdescription>
<para>displayDecorators If true, display decorators </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="314" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="568" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1aec7fa1a21969f2175948bd57ac8a46ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void ostk::mathematics::geometry::d3::object::Sphere::applyTransformation</definition>
        <argsstring>(const Transformation &amp;aTransformation) override</argsstring>
        <name>applyTransformation</name>
        <reimplements refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a925a50c2bb1c31f396e469b74595e42a">applyTransformation</reimplements>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_transformation" kindref="compound">Transformation</ref> &amp;</type>
          <declname>aTransformation</declname>
        </param>
        <briefdescription>
<para>Apply transformation to sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aTransformation</parametername>
</parameternamelist>
<parameterdescription>
<para>A transformation </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="320" column="18" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="580" bodyend="598"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a74397702d3224ec9a01897273de8f590" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref></type>
        <definition>Sphere ostk::mathematics::geometry::d3::object::Sphere::Undefined</definition>
        <argsstring>()</argsstring>
        <name>Undefined</name>
        <briefdescription>
<para>Constructs an undefined sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>Sphere::Undefined()<sp/>;<sp/>//<sp/>Undefined</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Undefined sphere </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="330" column="19" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="600" bodyend="603"/>
      </memberdef>
      <memberdef kind="function" id="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a81b2f22059fd4a1235795783e0cfcbb3" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref></type>
        <definition>Sphere ostk::mathematics::geometry::d3::object::Sphere::Unit</definition>
        <argsstring>(const Point &amp;aCenter)</argsstring>
        <name>Unit</name>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_point" kindref="compound">Point</ref> &amp;</type>
          <declname>aCenter</declname>
        </param>
        <briefdescription>
<para>Constructs a unit sphere. </para>
        </briefdescription>
        <detaileddescription>
<para><ulink url="https://en.wikipedia.org/wiki/Unit_sphere">https://en.wikipedia.org/wiki/Unit_sphere</ulink></para>
<para><programlisting><codeline><highlight class="normal">Sphere<sp/>sphere<sp/>=<sp/>Sphere::Unit({<sp/>0.0,<sp/>0.0,<sp/>0.0<sp/>})<sp/>;</highlight></codeline>
</programlisting></para>
<para><simplesect kind="return"><para>Unit sphere </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="342" column="19" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.cpp" bodystart="605" bodyend="608"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere" kindref="compound">Sphere</ref>. </para>
    </briefdescription>
    <detaileddescription>
<para><verbatim>                        A sphere is a perfectly round geometrical object in three-dimensional space that is the
                        surface of a completely round ball.
</verbatim></para>
<para><ulink url="https://en.wikipedia.org/wiki/Sphere">https://en.wikipedia.org/wiki/Sphere</ulink> </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>ostk::mathematics::geometry::d3::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object"/>
      </node>
      <node id="1">
        <label>ostk::mathematics::geometry::d3::object::Sphere</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>ostk::mathematics::geometry::d3::Object</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object"/>
      </node>
      <node id="1">
        <label>ostk::mathematics::geometry::d3::object::Sphere</label>
        <link refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" line="47" column="1" bodyfile="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Object/Sphere.hpp" bodystart="46" bodyend="347"/>
    <listofallmembers>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1aec7fa1a21969f2175948bd57ac8a46ff" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>applyTransformation</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1acc1ec9fde56128d7fde8b96fa57180c4" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>as</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a1a713f929110c5bcd656a3d56a024935" prot="private" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>center_</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a28e9a96d726b5eea0da0696647912780" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>clone</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a4a3a9cec2f8df6799344ea779a635fd5" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ac55784d01e1ab5c8ea2b800dc844448b" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1af60902b6b025fdaf8839c08e532dd2b0" prot="public" virt="virtual" ambiguityscope="ostk::mathematics::geometry::d3::Object::"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>contains</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a02fcea7a4eaae6f396bc09e09bcc6966" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>getCenter</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a391da737aed2cd3615f9992949c07abe" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>getRadius</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1af155cd1d10cd5b010b134a29e6d67492" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1abfdfa4f19cb716271505c28d7085d2da" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a66e7d89eaf128a2ee1277a605f25ab7e" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ad710eeb805c0152d53dc874131f5f758" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ae16d1ba9ed85bb8b7716202a651c262c" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1ac1325aba0fa3796c9ddc5d39dfe40aa6" prot="public" virt="virtual" ambiguityscope="ostk::mathematics::geometry::d3::Object::"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersectionWith</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1afc06f6968104f1207b1f3da7ceaae4aa" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1adbdedf8a33a33ecf34f4c8a45f365c0d" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1aa26ce6b341283ea77b99207a05368a52" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a669b7ac4228e1bf40fa0ffabc3cddde9" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a26a485b4674c7f852f07652297adf8b4" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a38e7ed98b7f10761bdf7c5d87315a460" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ad2c172f9ed998e785986b13bffeb6c93" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a3ec429fe276d4da08dea92c56c008fc5" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a3b3ce9155edeeab7fbaec2cbdde06f41" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a0d8ddc7a929bb3b0b1c70ad82742e64e" prot="public" virt="virtual" ambiguityscope="ostk::mathematics::geometry::d3::Object::"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>intersects</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1ad9e6f5027d14e3c7d7bead94052611ed" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>is</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a5311446aca36ccadbd8ae323502dba44" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>isDefined</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a9dbed5ac4eec1c9a79eedf5408191021" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>isUnitary</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1af003ad733beface98466830078a83875" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>Object</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a48d995d87aaf80ffae9629d33137e50a" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1a550754b8f5576ce2465979657325d5df" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d3::Object::"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>operator!=</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a86fab4da986e79ea843646b859a54b7b" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1aeb99dd25ff1c0683d9c0a058c8200e4d" prot="public" virt="non-virtual" ambiguityscope="ostk::mathematics::geometry::d3::Object::"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>operator==</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ae7a968c5f386c5f9019389e6e3fca138" prot="public" virt="virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>print</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1ab031f3603f4983ac84c37a719f6a31b0" prot="private" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>radius_</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a44cf858e4351d1890cc1116bb85f9850" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>Sphere</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a74397702d3224ec9a01897273de8f590" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>Undefined</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1object_1_1_sphere_1a81b2f22059fd4a1235795783e0cfcbb3" prot="public" virt="non-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>Unit</name></member>
      <member refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1_object_1aae1324c306129cce2e7d42a28c0de181" prot="public" virt="pure-virtual"><scope>ostk::mathematics::geometry::d3::object::Sphere</scope><name>~Object</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
