<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation" kind="namespace" language="C++">
    <compoundname>ostk::mathematics::geometry::d3::transformation::rotation</compoundname>
    <innerclass refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_euler_angle" prot="public">ostk::mathematics::geometry::d3::transformation::rotation::EulerAngle</innerclass>
    <innerclass refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" prot="public">ostk::mathematics::geometry::d3::transformation::rotation::Quaternion</innerclass>
    <innerclass refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_rotation_matrix" prot="public">ostk::mathematics::geometry::d3::transformation::rotation::RotationMatrix</innerclass>
    <innerclass refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_rotation_vector" prot="public">ostk::mathematics::geometry::d3::transformation::rotation::RotationVector</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1a4039583c5e12d44db90af36b8420cffd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::mathematics::geometry::d3::transformation::rotation::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const EulerAngle &amp;aEulerAngle)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_euler_angle" kindref="compound">EulerAngle</ref> &amp;</type>
          <declname>aEulerAngle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>EulerAngle::Unit();</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aEulerAngle</parametername>
</parameternamelist>
<parameterdescription>
<para>A Euler <ref refid="classostk_1_1mathematics_1_1geometry_1_1_angle" kindref="compound">Angle</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Output stream reference </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/EulerAngle.cpp" line="79" column="1" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/EulerAngle.cpp" bodystart="79" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1a6028c92c3bd330713db8cab7bc5122e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref></type>
        <definition>Quaternion ostk::mathematics::geometry::d3::transformation::rotation::operator*</definition>
        <argsstring>(const Real &amp;aScalar, const Quaternion &amp;aQuaternion)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Real &amp;</type>
          <declname>aScalar</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>aQuaternion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">Real<sp/>scalar<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Quaternion<sp/>q_1<sp/>=<sp/>...<sp/>;</highlight></codeline>
<codeline><highlight class="normal">Quaternion<sp/>q_2<sp/>=<sp/>scalar<sp/>*<sp/>q_1<sp/>;</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">aScalar</parametername>
</parameternamelist>
<parameterdescription>
<para>A scalar </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aQuaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/Quaternion.cpp" line="92" column="12" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/Quaternion.cpp" bodystart="92" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1ae26404779f77ca73c95975806e5402d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::mathematics::geometry::d3::transformation::rotation::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const Quaternion &amp;aQuaternion)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref> &amp;</type>
          <declname>aQuaternion</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>Quaternion::XYZS(0.0,<sp/>0.0,<sp/>0.0,<sp/>1.0);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aQuaternion</parametername>
</parameternamelist>
<parameterdescription>
<para>A <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_quaternion" kindref="compound">Quaternion</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Output stream reference </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/Quaternion.cpp" line="146" column="1" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/Quaternion.cpp" bodystart="146" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1afa8bc95840d3ed51eb2c9726bbd52f23" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::mathematics::geometry::d3::transformation::rotation::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const RotationMatrix &amp;aRotationMatrix)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_rotation_matrix" kindref="compound">RotationMatrix</ref> &amp;</type>
          <declname>aRotationMatrix</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>RotationMatrix(...);</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aRotationMatrix</parametername>
</parameternamelist>
<parameterdescription>
<para>A Rotation Matrix </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Output stream reference </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/RotationMatrix.cpp" line="191" column="1" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/RotationMatrix.cpp" bodystart="191" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="namespaceostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1a89b141f8b9cd2a93dbd9b584bab23d5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>std::ostream &amp;</type>
        <definition>std::ostream&amp; ostk::mathematics::geometry::d3::transformation::rotation::operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;anOutputStream, const RotationVector &amp;aRotationVector)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>anOutputStream</declname>
        </param>
        <param>
          <type>const <ref refid="classostk_1_1mathematics_1_1geometry_1_1d3_1_1transformation_1_1rotation_1_1_rotation_vector" kindref="compound">RotationVector</ref> &amp;</type>
          <declname>aRotationVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><programlisting><codeline><highlight class="normal">std::cout<sp/>&lt;&lt;<sp/>RotationVector::Unit();</highlight></codeline>
</programlisting></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername direction="in">anOutputStream</parametername>
</parameternamelist>
<parameterdescription>
<para>An output stream </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername direction="in">aRotationVector</parametername>
</parameternamelist>
<parameterdescription>
<para>A Rotation Vector </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to output stream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/RotationVector.cpp" line="65" column="1" bodyfile="src/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/RotationVector.cpp" bodystart="65" bodyend="77"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="include/OpenSpaceToolkit/Mathematics/Geometry/3D/Transformation/Rotation/EulerAngle.hpp" line="24" column="1"/>
  </compounddef>
</doxygen>
